package com.example.demo;

import java.io.File;
import java.io.FileInputStream;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;

@SpringBootTest
class DemoApplicationTests {
	
	//private String remoteHost = "0.0.0.0:22";
	private String host = "localhost";
	private int port =22;
    private String username = "user1";
    private String password = "user1";
    private String localFile = "src/main/resources/input.txt";
    private String remoteFile = "tree.jpg";
    private String localDir = "src/main/resources/";
    private String remoteDir = "/";
    //private String knownHostsFileLoc = "/Users/USERNAME/known_hosts_sample";

	@Test
	void contextLoads() {
	}
 @Test
	 public void whenUploadFileUsingJsch_thenSuccess() throws JSchException, SftpException {
		/*
		 * ChannelSftp channelSftp = setupJsch(); channelSftp.connect();
		 * channelSftp.put(localFile, remoteDir + "jschFile.txt"); channelSftp.exit();
		 */
	 JSch jsch = new JSch();
     Session session = jsch.getSession( username, host, 22 );
     session.setConfig( "PreferredAuthentications", "password" );
     session.setPassword( password );
     java.util.Properties config = new java.util.Properties(); 
     config.put("StrictHostKeyChecking", "no");//do not prefer this. demo only
     session.setConfig(config);
     session.connect( 1200 );
     Channel channel = session.openChannel( "sftp" );
     ChannelSftp sftp = ( ChannelSftp ) channel;
     sftp.connect( 600 );
     channel = session.openChannel("sftp");
     channel.connect();
     try {
			File f = new File(localFile /* + this.fileName */);
         sftp.put(new FileInputStream(f), f.getName());
     } catch (Exception e) {
         e.printStackTrace();
     }
     channel.disconnect();
     sftp.disconnect();
	    }
 @Test
	 public void whenDownloadFileUsingJsch_thenSuccess() throws JSchException, SftpException {
		/*
		 * ChannelSftp channelSftp = setupJsch(); channelSftp.connect();
		 */
	 JSch jsch = new JSch();
     Session session = jsch.getSession( username, host, 22 );
     session.setConfig( "PreferredAuthentications", "password" );
     session.setPassword( password );
     java.util.Properties config = new java.util.Properties(); 
     config.put("StrictHostKeyChecking", "no");//do not prefer this. demo only
     session.setConfig(config);
     session.connect( 1200 );
     Channel channel = session.openChannel( "sftp" );
     ChannelSftp sftp = ( ChannelSftp ) channel;
     sftp.connect( 600 );
     channel = session.openChannel("sftp");
     channel.connect();
		sftp.get(remoteFile, localDir /* + "jschFile.txt" */ );
     sftp.exit();
     
    
	    }
	 
	 private ChannelSftp setupJsch() throws JSchException {
		    JSch jsch = new JSch();
		    jsch.setKnownHosts("/Users/john/.ssh/known_hosts");
		    Session jschSession = jsch.getSession(username, host, port);
		    jschSession.setConfig("StrictHostKeyChecking", "no");
		    jschSession.setPassword(password);
		    jschSession.connect();
		    return (ChannelSftp) jschSession.openChannel("sftp");
		}
}
